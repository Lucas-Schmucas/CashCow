
# SERVER CONFIGURATION
server {
	## Nginx listens to port 80
	listen 80;

	## These are the files Nginx is looking for when accessing a direcotry, 
	## According to it's order
	index index.php index.html;

	## Any errors Nginx encounters will be stored here
	error_log /var/log/nginx/error.log;

	## Any request to the server will be stored here
	access_log /var/log/nginx/access.log;
	
	## Set the root direcotry for my application, where Nginx will look for files to serve
	root /var/www/public;
	
	## This block defines the handling of PHP files. 
	## The regex '~ \.php$' matches any request that ends with '.php'
	location ~ \.php$ {

		### If the file requested is not found, Nginx returns a 404 error
	        try_files $uri =404;

		### This splits the URI into two parts: the PHP script name and the path information
		fastcgi_split_path_info ^(.+\.php)(/.+)$;

		### This forwards the PHP request to the FastCGI server running at app:9000.
		### In this case 'app' is the hostname because we are running the PHP-FPM service
		### In a docker container (called app)
		fastcgi_pass app:9000;

		### This is the defautl file that gets executed,
		### when the request gets passed to the FastCGI server
		fastcgi_index index.php;

		### This includes a file with the default FastCGI parameters
		include fastcgi_params;

		### THis sets the SCRIPT_FILENAME parameter,
		### which tells PHP-FPM the full path of the PHP script to execute.
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

		### This passes the path information captured earlier via fastcgi_split_path_info
		### to the FastCGI server, whcih can be used by the PHP application.
		fastcgi_param PATH_INFO $fastcgi_path_info;
	}

	## THis block defines how to handle requests to the root direcotry
	## or any other URI that doesn't match the previous blocks
	location / {
		
		### THis directive tries to serve the requeted URI as a file ($uri) or
		### or as a directory ($uri/). if this does not help it falls back to
		### serving the index.php file, passing any query parameters ($query_string) 
		### along with the request. IMPORTANT for Laravel routing
		try_files $uri $uri/ /index.php?$query_string;
		
		### Enables the serving of pre-compressed '.gz' files if they exist
		gzip_static on;
	}
}
